import fs from 'fs';
import path from 'path';
import os from 'os';
import { execSync } from 'child_process';

export const setupCDK = (): void => {
  console.log('üõ†Ô∏è Setting up AWS CDK...');

  console.log('üì¶ Installing AWS CDK as a project dependency...');
  execSync('npm install --save-dev aws-cdk', { stdio: 'inherit' });

  const cdkJsonPath = path.join(process.cwd(), 'cdk.json');
  const binDirPath = path.join(process.cwd(), 'bin');
  const templateDir = path.join(__dirname, '../templates');
  const cdkJsonTemplate = path.join(templateDir, 'cdk.json');
  const tempDir = fs.mkdtempSync(path.join(os.tmpdir(), 'cdk-init-'));

  if (!fs.existsSync(cdkJsonPath)) {
    try {
      console.log(
        'üöÄ Initializing AWS CDK project in a temporary directory...'
      );
      execSync('cdk init app --language=typescript --generate-only=true', {
        cwd: tempDir,
        stdio: 'inherit',
      });

      const tempCdkJsonPath = path.join(tempDir, 'cdk.json');
      const tempBinDirPath = path.join(tempDir, 'bin');

      if (fs.existsSync(tempCdkJsonPath)) {
        fs.copyFileSync(tempCdkJsonPath, cdkJsonPath);
        console.log('‚úÖ cdk.json copied to project root.');
      } else {
        console.error('‚ùå Error: cdk.json was not generated by cdk init.');
      }

      if (fs.existsSync(tempBinDirPath)) {
        fs.cpSync(tempBinDirPath, binDirPath, { recursive: true });
        console.log('‚úÖ bin directory copied to project root.');
      } else {
        console.error('‚ùå Error: bin directory was not generated by cdk init.');
      }

      fs.rmSync(tempDir, { recursive: true, force: true });
      console.log('üóëÔ∏è Temporary directory removed.');
    } catch (error) {
      console.error('‚ö†Ô∏è CDK init failed. Using template instead.');
      if (fs.existsSync(cdkJsonTemplate)) {
        fs.copyFileSync(cdkJsonTemplate, cdkJsonPath);
        console.log('‚úÖ cdk.json created from template.');
      } else {
        console.error('‚ùå Error: No cdk.json template found.');
      }
    }
  } else {
    console.log('‚ö†Ô∏è CDK project already exists. Skipping `cdk init`.');
  }
};
